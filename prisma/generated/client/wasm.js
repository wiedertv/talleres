
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  PrismaClientKnownRequestError,
  PrismaClientUnknownRequestError,
  PrismaClientRustPanicError,
  PrismaClientInitializationError,
  PrismaClientValidationError,
  getPrismaClient,
  sqltag,
  empty,
  join,
  raw,
  skip,
  Decimal,
  Debug,
  objectEnumValues,
  makeStrictEnum,
  Extensions,
  warnOnce,
  defineDmmfProperty,
  Public,
  getRuntime,
  createParam,
} = require('./runtime/wasm-engine-edge.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.11.0
 * Query Engine version: 9c30299f5a0ea26a96790e13f796dc6094db3173
 */
Prisma.prismaVersion = {
  client: "6.11.0",
  engine: "9c30299f5a0ea26a96790e13f796dc6094db3173"
}

Prisma.PrismaClientKnownRequestError = PrismaClientKnownRequestError;
Prisma.PrismaClientUnknownRequestError = PrismaClientUnknownRequestError
Prisma.PrismaClientRustPanicError = PrismaClientRustPanicError
Prisma.PrismaClientInitializationError = PrismaClientInitializationError
Prisma.PrismaClientValidationError = PrismaClientValidationError
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = sqltag
Prisma.empty = empty
Prisma.join = join
Prisma.raw = raw
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = Extensions.getExtensionContext
Prisma.defineExtension = Extensions.defineExtension

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}





/**
 * Enums
 */
exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.OrganizationScalarFieldEnum = {
  id: 'id',
  name: 'name',
  ownerId: 'ownerId',
  subscriptionId: 'subscriptionId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.UserScalarFieldEnum = {
  id: 'id',
  name: 'name',
  email: 'email',
  password: 'password',
  role: 'role',
  avatar: 'avatar',
  organizationId: 'organizationId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.SubscriptionScalarFieldEnum = {
  id: 'id',
  organizationId: 'organizationId',
  planId: 'planId',
  startDate: 'startDate',
  endDate: 'endDate',
  isActive: 'isActive',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.PaymentHistoryScalarFieldEnum = {
  id: 'id',
  subscriptionId: 'subscriptionId',
  amount: 'amount',
  paymentMethod: 'paymentMethod',
  paidAt: 'paidAt',
  nextRenewalAt: 'nextRenewalAt',
  createdAt: 'createdAt'
};

exports.Prisma.SubscriptionPlanScalarFieldEnum = {
  id: 'id',
  name: 'name',
  description: 'description',
  price: 'price',
  duration: 'duration',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.ClientScalarFieldEnum = {
  id: 'id',
  name: 'name',
  type: 'type',
  email: 'email',
  phone: 'phone',
  address: 'address',
  ci: 'ci',
  rif: 'rif',
  notes: 'notes',
  points: 'points',
  level: 'level',
  avatar: 'avatar',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  organizationId: 'organizationId'
};

exports.Prisma.VehicleScalarFieldEnum = {
  id: 'id',
  plate: 'plate',
  vin: 'vin',
  make: 'make',
  model: 'model',
  year: 'year',
  color: 'color',
  mileage: 'mileage',
  notes: 'notes',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  organizationId: 'organizationId'
};

exports.Prisma.VehicleClientScalarFieldEnum = {
  id: 'id',
  vehicleId: 'vehicleId',
  clientId: 'clientId',
  broughtAt: 'broughtAt'
};

exports.Prisma.ServiceScalarFieldEnum = {
  id: 'id',
  type: 'type',
  description: 'description',
  status: 'status',
  startDate: 'startDate',
  endDate: 'endDate',
  total: 'total',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  vehicleId: 'vehicleId',
  assignedToId: 'assignedToId',
  vehicleClientId: 'vehicleClientId',
  clientId: 'clientId',
  organizationId: 'organizationId'
};

exports.Prisma.ServiceItemScalarFieldEnum = {
  id: 'id',
  description: 'description',
  price: 'price',
  serviceId: 'serviceId'
};

exports.Prisma.PartScalarFieldEnum = {
  id: 'id',
  code: 'code',
  name: 'name',
  description: 'description',
  price: 'price',
  stock: 'stock',
  category: 'category',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  organizationId: 'organizationId'
};

exports.Prisma.PartsSaleScalarFieldEnum = {
  id: 'id',
  total: 'total',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  vehicleId: 'vehicleId',
  sellerId: 'sellerId',
  clientId: 'clientId'
};

exports.Prisma.PartUsageScalarFieldEnum = {
  id: 'id',
  quantity: 'quantity',
  serviceId: 'serviceId',
  partId: 'partId'
};

exports.Prisma.SaleItemScalarFieldEnum = {
  id: 'id',
  quantity: 'quantity',
  price: 'price',
  partsSaleId: 'partsSaleId',
  partId: 'partId'
};

exports.Prisma.LoyaltyBenefitScalarFieldEnum = {
  id: 'id',
  level: 'level',
  name: 'name',
  description: 'description',
  discount: 'discount'
};

exports.Prisma.InventoryMovementScalarFieldEnum = {
  id: 'id',
  partId: 'partId',
  type: 'type',
  quantity: 'quantity',
  beforeStock: 'beforeStock',
  afterStock: 'afterStock',
  reason: 'reason',
  createdAt: 'createdAt',
  organizationId: 'organizationId'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};
exports.MovementType = exports.$Enums.MovementType = {
  ENTRY: 'ENTRY',
  EXIT: 'EXIT',
  ADJUSTMENT: 'ADJUSTMENT',
  TRANSFER: 'TRANSFER'
};

exports.Role = exports.$Enums.Role = {
  ADMIN: 'ADMIN',
  MANAGER: 'MANAGER',
  MECHANIC: 'MECHANIC',
  RECEPTIONIST: 'RECEPTIONIST'
};

exports.ClientType = exports.$Enums.ClientType = {
  PERSONAL: 'PERSONAL',
  BUSINESS: 'BUSINESS'
};

exports.LoyaltyLevel = exports.$Enums.LoyaltyLevel = {
  BRONZE: 'BRONZE',
  SILVER: 'SILVER',
  GOLD: 'GOLD',
  PLATINUM: 'PLATINUM'
};

exports.ServiceType = exports.$Enums.ServiceType = {
  WITH_VEHICLE: 'WITH_VEHICLE',
  WITHOUT_VEHICLE: 'WITHOUT_VEHICLE'
};

exports.ServiceStatus = exports.$Enums.ServiceStatus = {
  PENDING: 'PENDING',
  IN_PROGRESS: 'IN_PROGRESS',
  COMPLETED: 'COMPLETED',
  CANCELLED: 'CANCELLED'
};

exports.PartCategory = exports.$Enums.PartCategory = {
  ENGINE: 'ENGINE',
  ELECTRICAL: 'ELECTRICAL',
  BRAKES: 'BRAKES',
  SUSPENSION: 'SUSPENSION',
  TRANSMISSION: 'TRANSMISSION',
  FILTERS: 'FILTERS',
  FLUIDS: 'FLUIDS',
  TIRES: 'TIRES',
  ACCESSORIES: 'ACCESSORIES'
};

exports.Prisma.ModelName = {
  Organization: 'Organization',
  User: 'User',
  Subscription: 'Subscription',
  PaymentHistory: 'PaymentHistory',
  SubscriptionPlan: 'SubscriptionPlan',
  Client: 'Client',
  Vehicle: 'Vehicle',
  VehicleClient: 'VehicleClient',
  Service: 'Service',
  ServiceItem: 'ServiceItem',
  Part: 'Part',
  PartsSale: 'PartsSale',
  PartUsage: 'PartUsage',
  SaleItem: 'SaleItem',
  LoyaltyBenefit: 'LoyaltyBenefit',
  InventoryMovement: 'InventoryMovement'
};
/**
 * Create the Client
 */
const config = {
  "generator": {
    "name": "client",
    "provider": {
      "fromEnvVar": null,
      "value": "prisma-client-js"
    },
    "output": {
      "value": "/home/alirioangel/development/personal/talleres/prisma/generated/client",
      "fromEnvVar": null
    },
    "config": {
      "engineType": "library"
    },
    "binaryTargets": [
      {
        "fromEnvVar": null,
        "value": "debian-openssl-3.0.x",
        "native": true
      }
    ],
    "previewFeatures": [
      "driverAdapters"
    ],
    "sourceFilePath": "/home/alirioangel/development/personal/talleres/prisma/schema.prisma",
    "isCustomOutput": true
  },
  "relativeEnvPaths": {
    "rootEnvPath": null,
    "schemaEnvPath": "../../../.env"
  },
  "relativePath": "../..",
  "clientVersion": "6.11.0",
  "engineVersion": "9c30299f5a0ea26a96790e13f796dc6094db3173",
  "datasourceNames": [
    "db"
  ],
  "activeProvider": "postgresql",
  "postinstall": false,
  "inlineDatasources": {
    "db": {
      "url": {
        "fromEnvVar": "DATABASE_URL",
        "value": null
      }
    }
  },
  "inlineSchema": "// This is your Prisma schema file,\n// learn more about it in the docs: https://pris.ly/d/prisma-schema\n\n// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?\n// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init\n\ngenerator client {\n  provider        = \"prisma-client-js\"\n  output          = \"./generated/client\"\n  previewFeatures = [\"driverAdapters\"]\n}\n\ndatasource db {\n  provider = \"postgresql\"\n  url      = env(\"DATABASE_URL\")\n}\n\nmodel Organization {\n  id                 String              @id @default(uuid())\n  name               String\n  owner              User                @relation(\"OrganizationOwner\", fields: [ownerId], references: [id])\n  ownerId            String              @unique\n  subscription       Subscription?       @relation(\"OrgSubscription\") // âœ… solo el nombre\n  subscriptionId     String?             @unique\n  users              User[]              @relation(\"OrganizationUsers\")\n  clients            Client[]\n  vehicles           Vehicle[]\n  services           Service[]\n  parts              Part[]\n  inventoryMovements InventoryMovement[]\n  createdAt          DateTime            @default(now())\n  updatedAt          DateTime            @updatedAt\n\n  @@map(\"organizations\")\n}\n\nmodel User {\n  id                String        @id @default(uuid())\n  name              String\n  email             String        @unique\n  password          String\n  role              Role          @default(MECHANIC)\n  avatar            String?\n  organizationId    String?\n  organization      Organization? @relation(\"OrganizationUsers\", fields: [organizationId], references: [id])\n  ownedOrganization Organization? @relation(\"OrganizationOwner\")\n  partsSales        PartsSale[]\n  services          Service[]     @relation(\"ServiceAssignedTo\")\n  createdAt         DateTime      @default(now())\n  updatedAt         DateTime      @updatedAt\n\n  @@map(\"users\")\n}\n\nmodel Subscription {\n  id             String           @id @default(uuid())\n  organization   Organization     @relation(\"OrgSubscription\", fields: [organizationId], references: [id])\n  organizationId String           @unique // âœ… relaciÃ³n 1:1\n  planId         String\n  plan           SubscriptionPlan @relation(fields: [planId], references: [id])\n  startDate      DateTime\n  endDate        DateTime\n  isActive       Boolean          @default(true)\n  createdAt      DateTime         @default(now())\n  updatedAt      DateTime         @updatedAt\n  paymentHistory PaymentHistory[]\n\n  @@map(\"subscriptions\")\n}\n\nmodel PaymentHistory {\n  id             String       @id @default(uuid())\n  subscription   Subscription @relation(fields: [subscriptionId], references: [id])\n  subscriptionId String\n  amount         Float\n  paymentMethod  String\n  paidAt         DateTime     @default(now())\n  nextRenewalAt  DateTime\n  createdAt      DateTime     @default(now())\n\n  @@map(\"payment_history\")\n}\n\nmodel SubscriptionPlan {\n  id            String         @id @default(uuid())\n  name          String\n  description   String?\n  price         Float\n  duration      Int // DuraciÃ³n en dÃ­as\n  createdAt     DateTime       @default(now())\n  updatedAt     DateTime       @updatedAt\n  subscriptions Subscription[]\n\n  @@map(\"subscription_plans\")\n}\n\nmodel Client {\n  id             String          @id @default(uuid())\n  name           String\n  type           ClientType\n  email          String?\n  phone          String\n  address        String?\n  ci             String?\n  rif            String?\n  notes          String?\n  points         Int             @default(0)\n  level          LoyaltyLevel    @default(BRONZE)\n  avatar         String?\n  createdAt      DateTime        @default(now())\n  updatedAt      DateTime        @updatedAt\n  vehicles       VehicleClient[] // RelaciÃ³n muchos a muchos\n  partsSales     PartsSale[]\n  services       Service[]\n  organization   Organization    @relation(fields: [organizationId], references: [id])\n  organizationId String\n\n  @@map(\"clients\")\n}\n\nmodel Vehicle {\n  id             String          @id @default(uuid())\n  plate          String          @unique\n  vin            String?\n  make           String\n  model          String\n  year           Int\n  color          String?\n  mileage        Int?\n  notes          String?\n  createdAt      DateTime        @default(now())\n  updatedAt      DateTime        @updatedAt\n  clients        VehicleClient[] // RelaciÃ³n muchos a muchos\n  services       Service[]\n  partsSales     PartsSale[]\n  organization   Organization    @relation(fields: [organizationId], references: [id])\n  organizationId String\n\n  @@map(\"vehicles\")\n}\n\nmodel VehicleClient {\n  id        String    @id @default(uuid())\n  vehicle   Vehicle   @relation(fields: [vehicleId], references: [id])\n  vehicleId String\n  client    Client    @relation(fields: [clientId], references: [id])\n  clientId  String\n  broughtAt DateTime  @default(now())\n  services  Service[]\n\n  @@unique([vehicleId, clientId, broughtAt])\n  @@map(\"vehicle_clients\")\n}\n\nmodel Service {\n  id              String         @id @default(uuid())\n  type            ServiceType\n  description     String\n  status          ServiceStatus  @default(PENDING)\n  startDate       DateTime\n  endDate         DateTime?\n  total           Float\n  createdAt       DateTime       @default(now())\n  updatedAt       DateTime       @updatedAt\n  vehicle         Vehicle?       @relation(fields: [vehicleId], references: [id])\n  vehicleId       String?\n  assignedTo      User           @relation(\"ServiceAssignedTo\", fields: [assignedToId], references: [id]) // ðŸ‘ˆ RelaciÃ³n nombrada\n  assignedToId    String\n  serviceItems    ServiceItem[]\n  partsUsed       PartUsage[]\n  vehicleClient   VehicleClient? @relation(fields: [vehicleClientId], references: [id])\n  vehicleClientId String?\n  client          Client?        @relation(fields: [clientId], references: [id])\n  clientId        String?\n  organization    Organization   @relation(fields: [organizationId], references: [id])\n  organizationId  String\n\n  @@map(\"services\")\n}\n\nmodel ServiceItem {\n  id          String  @id @default(uuid())\n  description String\n  price       Float\n  service     Service @relation(fields: [serviceId], references: [id])\n  serviceId   String\n\n  @@map(\"service_items\")\n}\n\nmodel Part {\n  id                 String              @id @default(uuid())\n  code               String              @unique\n  name               String\n  description        String?\n  price              Float\n  stock              Int                 @default(0)\n  category           PartCategory\n  createdAt          DateTime            @default(now())\n  updatedAt          DateTime            @updatedAt\n  partsSales         PartsSale[]\n  partsUsed          PartUsage[]\n  saleItems          SaleItem[]\n  inventoryMovements InventoryMovement[]\n  organization       Organization        @relation(fields: [organizationId], references: [id])\n  organizationId     String\n\n  @@map(\"parts\")\n}\n\nmodel PartsSale {\n  id        String     @id @default(uuid())\n  total     Float\n  createdAt DateTime   @default(now())\n  updatedAt DateTime   @updatedAt\n  vehicle   Vehicle    @relation(fields: [vehicleId], references: [id])\n  vehicleId String\n  seller    User       @relation(fields: [sellerId], references: [id])\n  sellerId  String\n  Part      Part[]\n  saleItems SaleItem[]\n  Client    Client?    @relation(fields: [clientId], references: [id])\n  clientId  String?\n\n  @@map(\"parts_sales\")\n}\n\nmodel PartUsage {\n  id        String  @id @default(uuid())\n  quantity  Int\n  service   Service @relation(fields: [serviceId], references: [id])\n  serviceId String\n  part      Part    @relation(fields: [partId], references: [id])\n  partId    String\n\n  @@map(\"part_usages\")\n}\n\nmodel SaleItem {\n  id          String    @id @default(uuid())\n  quantity    Int\n  price       Float\n  partsSale   PartsSale @relation(fields: [partsSaleId], references: [id])\n  partsSaleId String\n  part        Part      @relation(fields: [partId], references: [id])\n  partId      String\n\n  @@map(\"sale_items\")\n}\n\nmodel LoyaltyBenefit {\n  id          String       @id @default(uuid())\n  level       LoyaltyLevel\n  name        String\n  description String\n  discount    Float?\n\n  @@map(\"loyalty_benefits\")\n}\n\nmodel InventoryMovement {\n  id             String       @id @default(uuid())\n  part           Part         @relation(fields: [partId], references: [id])\n  partId         String\n  type           MovementType\n  quantity       Int\n  beforeStock    Int\n  afterStock     Int\n  reason         String?\n  createdAt      DateTime     @default(now())\n  organization   Organization @relation(fields: [organizationId], references: [id])\n  organizationId String\n\n  @@map(\"inventory_movements\")\n}\n\nenum MovementType {\n  ENTRY // Entrada de inventario (compra, devoluciÃ³n)\n  EXIT // Salida (venta, uso en servicio)\n  ADJUSTMENT // Ajuste manual de stock\n  TRANSFER // Transferencia entre almacenes (si aplica)\n}\n\nenum Role {\n  ADMIN\n  MANAGER\n  MECHANIC\n  RECEPTIONIST\n}\n\nenum ClientType {\n  PERSONAL\n  BUSINESS\n}\n\nenum LoyaltyLevel {\n  BRONZE\n  SILVER\n  GOLD\n  PLATINUM\n}\n\nenum ServiceType {\n  WITH_VEHICLE\n  WITHOUT_VEHICLE\n}\n\nenum ServiceStatus {\n  PENDING\n  IN_PROGRESS\n  COMPLETED\n  CANCELLED\n}\n\nenum PartCategory {\n  ENGINE\n  ELECTRICAL\n  BRAKES\n  SUSPENSION\n  TRANSMISSION\n  FILTERS\n  FLUIDS\n  TIRES\n  ACCESSORIES\n}\n",
  "inlineSchemaHash": "24dc9b79c112540f2f22eade3576eb7a8ef16b30c6b8f71047f6a8c895a49b1d",
  "copyEngine": true
}
config.dirname = '/'

config.runtimeDataModel = JSON.parse("{\"models\":{\"Organization\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"owner\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"OrganizationOwner\"},{\"name\":\"ownerId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"subscription\",\"kind\":\"object\",\"type\":\"Subscription\",\"relationName\":\"OrgSubscription\"},{\"name\":\"subscriptionId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"users\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"OrganizationUsers\"},{\"name\":\"clients\",\"kind\":\"object\",\"type\":\"Client\",\"relationName\":\"ClientToOrganization\"},{\"name\":\"vehicles\",\"kind\":\"object\",\"type\":\"Vehicle\",\"relationName\":\"OrganizationToVehicle\"},{\"name\":\"services\",\"kind\":\"object\",\"type\":\"Service\",\"relationName\":\"OrganizationToService\"},{\"name\":\"parts\",\"kind\":\"object\",\"type\":\"Part\",\"relationName\":\"OrganizationToPart\"},{\"name\":\"inventoryMovements\",\"kind\":\"object\",\"type\":\"InventoryMovement\",\"relationName\":\"InventoryMovementToOrganization\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":\"organizations\"},\"User\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"password\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"role\",\"kind\":\"enum\",\"type\":\"Role\"},{\"name\":\"avatar\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"organizationId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"organization\",\"kind\":\"object\",\"type\":\"Organization\",\"relationName\":\"OrganizationUsers\"},{\"name\":\"ownedOrganization\",\"kind\":\"object\",\"type\":\"Organization\",\"relationName\":\"OrganizationOwner\"},{\"name\":\"partsSales\",\"kind\":\"object\",\"type\":\"PartsSale\",\"relationName\":\"PartsSaleToUser\"},{\"name\":\"services\",\"kind\":\"object\",\"type\":\"Service\",\"relationName\":\"ServiceAssignedTo\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":\"users\"},\"Subscription\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"organization\",\"kind\":\"object\",\"type\":\"Organization\",\"relationName\":\"OrgSubscription\"},{\"name\":\"organizationId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"planId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"plan\",\"kind\":\"object\",\"type\":\"SubscriptionPlan\",\"relationName\":\"SubscriptionToSubscriptionPlan\"},{\"name\":\"startDate\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"endDate\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"isActive\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"paymentHistory\",\"kind\":\"object\",\"type\":\"PaymentHistory\",\"relationName\":\"PaymentHistoryToSubscription\"}],\"dbName\":\"subscriptions\"},\"PaymentHistory\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"subscription\",\"kind\":\"object\",\"type\":\"Subscription\",\"relationName\":\"PaymentHistoryToSubscription\"},{\"name\":\"subscriptionId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"amount\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"paymentMethod\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"paidAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"nextRenewalAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":\"payment_history\"},\"SubscriptionPlan\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"price\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"duration\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"subscriptions\",\"kind\":\"object\",\"type\":\"Subscription\",\"relationName\":\"SubscriptionToSubscriptionPlan\"}],\"dbName\":\"subscription_plans\"},\"Client\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"type\",\"kind\":\"enum\",\"type\":\"ClientType\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"phone\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"address\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"ci\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"rif\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"notes\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"points\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"level\",\"kind\":\"enum\",\"type\":\"LoyaltyLevel\"},{\"name\":\"avatar\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"vehicles\",\"kind\":\"object\",\"type\":\"VehicleClient\",\"relationName\":\"ClientToVehicleClient\"},{\"name\":\"partsSales\",\"kind\":\"object\",\"type\":\"PartsSale\",\"relationName\":\"ClientToPartsSale\"},{\"name\":\"services\",\"kind\":\"object\",\"type\":\"Service\",\"relationName\":\"ClientToService\"},{\"name\":\"organization\",\"kind\":\"object\",\"type\":\"Organization\",\"relationName\":\"ClientToOrganization\"},{\"name\":\"organizationId\",\"kind\":\"scalar\",\"type\":\"String\"}],\"dbName\":\"clients\"},\"Vehicle\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"plate\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"vin\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"make\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"model\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"year\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"color\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"mileage\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"notes\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"clients\",\"kind\":\"object\",\"type\":\"VehicleClient\",\"relationName\":\"VehicleToVehicleClient\"},{\"name\":\"services\",\"kind\":\"object\",\"type\":\"Service\",\"relationName\":\"ServiceToVehicle\"},{\"name\":\"partsSales\",\"kind\":\"object\",\"type\":\"PartsSale\",\"relationName\":\"PartsSaleToVehicle\"},{\"name\":\"organization\",\"kind\":\"object\",\"type\":\"Organization\",\"relationName\":\"OrganizationToVehicle\"},{\"name\":\"organizationId\",\"kind\":\"scalar\",\"type\":\"String\"}],\"dbName\":\"vehicles\"},\"VehicleClient\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"vehicle\",\"kind\":\"object\",\"type\":\"Vehicle\",\"relationName\":\"VehicleToVehicleClient\"},{\"name\":\"vehicleId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"client\",\"kind\":\"object\",\"type\":\"Client\",\"relationName\":\"ClientToVehicleClient\"},{\"name\":\"clientId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"broughtAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"services\",\"kind\":\"object\",\"type\":\"Service\",\"relationName\":\"ServiceToVehicleClient\"}],\"dbName\":\"vehicle_clients\"},\"Service\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"type\",\"kind\":\"enum\",\"type\":\"ServiceType\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"ServiceStatus\"},{\"name\":\"startDate\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"endDate\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"total\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"vehicle\",\"kind\":\"object\",\"type\":\"Vehicle\",\"relationName\":\"ServiceToVehicle\"},{\"name\":\"vehicleId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"assignedTo\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"ServiceAssignedTo\"},{\"name\":\"assignedToId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"serviceItems\",\"kind\":\"object\",\"type\":\"ServiceItem\",\"relationName\":\"ServiceToServiceItem\"},{\"name\":\"partsUsed\",\"kind\":\"object\",\"type\":\"PartUsage\",\"relationName\":\"PartUsageToService\"},{\"name\":\"vehicleClient\",\"kind\":\"object\",\"type\":\"VehicleClient\",\"relationName\":\"ServiceToVehicleClient\"},{\"name\":\"vehicleClientId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"client\",\"kind\":\"object\",\"type\":\"Client\",\"relationName\":\"ClientToService\"},{\"name\":\"clientId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"organization\",\"kind\":\"object\",\"type\":\"Organization\",\"relationName\":\"OrganizationToService\"},{\"name\":\"organizationId\",\"kind\":\"scalar\",\"type\":\"String\"}],\"dbName\":\"services\"},\"ServiceItem\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"price\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"service\",\"kind\":\"object\",\"type\":\"Service\",\"relationName\":\"ServiceToServiceItem\"},{\"name\":\"serviceId\",\"kind\":\"scalar\",\"type\":\"String\"}],\"dbName\":\"service_items\"},\"Part\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"code\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"price\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"stock\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"category\",\"kind\":\"enum\",\"type\":\"PartCategory\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"partsSales\",\"kind\":\"object\",\"type\":\"PartsSale\",\"relationName\":\"PartToPartsSale\"},{\"name\":\"partsUsed\",\"kind\":\"object\",\"type\":\"PartUsage\",\"relationName\":\"PartToPartUsage\"},{\"name\":\"saleItems\",\"kind\":\"object\",\"type\":\"SaleItem\",\"relationName\":\"PartToSaleItem\"},{\"name\":\"inventoryMovements\",\"kind\":\"object\",\"type\":\"InventoryMovement\",\"relationName\":\"InventoryMovementToPart\"},{\"name\":\"organization\",\"kind\":\"object\",\"type\":\"Organization\",\"relationName\":\"OrganizationToPart\"},{\"name\":\"organizationId\",\"kind\":\"scalar\",\"type\":\"String\"}],\"dbName\":\"parts\"},\"PartsSale\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"total\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"vehicle\",\"kind\":\"object\",\"type\":\"Vehicle\",\"relationName\":\"PartsSaleToVehicle\"},{\"name\":\"vehicleId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"seller\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"PartsSaleToUser\"},{\"name\":\"sellerId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"Part\",\"kind\":\"object\",\"type\":\"Part\",\"relationName\":\"PartToPartsSale\"},{\"name\":\"saleItems\",\"kind\":\"object\",\"type\":\"SaleItem\",\"relationName\":\"PartsSaleToSaleItem\"},{\"name\":\"Client\",\"kind\":\"object\",\"type\":\"Client\",\"relationName\":\"ClientToPartsSale\"},{\"name\":\"clientId\",\"kind\":\"scalar\",\"type\":\"String\"}],\"dbName\":\"parts_sales\"},\"PartUsage\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"quantity\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"service\",\"kind\":\"object\",\"type\":\"Service\",\"relationName\":\"PartUsageToService\"},{\"name\":\"serviceId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"part\",\"kind\":\"object\",\"type\":\"Part\",\"relationName\":\"PartToPartUsage\"},{\"name\":\"partId\",\"kind\":\"scalar\",\"type\":\"String\"}],\"dbName\":\"part_usages\"},\"SaleItem\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"quantity\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"price\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"partsSale\",\"kind\":\"object\",\"type\":\"PartsSale\",\"relationName\":\"PartsSaleToSaleItem\"},{\"name\":\"partsSaleId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"part\",\"kind\":\"object\",\"type\":\"Part\",\"relationName\":\"PartToSaleItem\"},{\"name\":\"partId\",\"kind\":\"scalar\",\"type\":\"String\"}],\"dbName\":\"sale_items\"},\"LoyaltyBenefit\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"level\",\"kind\":\"enum\",\"type\":\"LoyaltyLevel\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"discount\",\"kind\":\"scalar\",\"type\":\"Float\"}],\"dbName\":\"loyalty_benefits\"},\"InventoryMovement\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"part\",\"kind\":\"object\",\"type\":\"Part\",\"relationName\":\"InventoryMovementToPart\"},{\"name\":\"partId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"type\",\"kind\":\"enum\",\"type\":\"MovementType\"},{\"name\":\"quantity\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"beforeStock\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"afterStock\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"reason\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"organization\",\"kind\":\"object\",\"type\":\"Organization\",\"relationName\":\"InventoryMovementToOrganization\"},{\"name\":\"organizationId\",\"kind\":\"scalar\",\"type\":\"String\"}],\"dbName\":\"inventory_movements\"}},\"enums\":{},\"types\":{}}")
defineDmmfProperty(exports.Prisma, config.runtimeDataModel)
config.engineWasm = {
  getRuntime: async () => require('./query_engine_bg.js'),
  getQueryEngineWasmModule: async () => {
    const loader = (await import('#wasm-engine-loader')).default
    const engine = (await loader).default
    return engine
  }
}
config.compilerWasm = undefined

config.injectableEdgeEnv = () => ({
  parsed: {
    DATABASE_URL: typeof globalThis !== 'undefined' && globalThis['DATABASE_URL'] || typeof process !== 'undefined' && process.env && process.env.DATABASE_URL || undefined
  }
})

if (typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined) {
  Debug.enable(typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined)
}

const PrismaClient = getPrismaClient(config)
exports.PrismaClient = PrismaClient
Object.assign(exports, Prisma)

